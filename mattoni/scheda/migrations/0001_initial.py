# Generated by Django 3.0.3 on 2022-02-14 10:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('staff', models.BooleanField(default=False)),
                ('admin', models.BooleanField(default=False)),
                ('is_operator', models.BooleanField(default=False)),
                ('corporation', models.CharField(blank=True, max_length=30)),
                ('phone', models.CharField(blank=True, max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Missione',
            fields=[
                ('id_missione', models.AutoField(primary_key=True, serialize=False)),
                ('luogo', models.CharField(max_length=1)),
                ('patologia', models.IntegerField()),
                ('criticita', models.CharField(max_length=1)),
                ('nome_p', models.CharField(blank=True, max_length=20, null=True)),
                ('cognome_p', models.CharField(default='NON DEFINITO', max_length=20)),
                ('luogo_intervento', models.CharField(max_length=100)),
                ('civico_intervento', models.CharField(max_length=5)),
                ('comune_intervento', models.CharField(max_length=20)),
                ('provincia_intervento', models.CharField(max_length=2)),
                ('cap_intervento', models.IntegerField()),
                ('cellulare', models.CharField(blank=True, max_length=15, null=True)),
                ('note', models.TextField(blank=True)),
                ('avvisi', models.TextField(blank=True)),
                ('data_nascita', models.DateField(blank=True, null=True)),
                ('dove_nato', models.CharField(blank=True, max_length=25, null=True)),
                ('eta', models.IntegerField(blank=True, null=True)),
                ('residenza', models.CharField(blank=True, max_length=100, null=True)),
                ('comune_residenza', models.CharField(blank=True, max_length=20, null=True)),
                ('civico_residenza', models.CharField(blank=True, max_length=5, null=True)),
                ('provincia_residenza', models.CharField(blank=True, max_length=2, null=True)),
                ('cap_residenza', models.IntegerField(blank=True, null=True)),
                ('invio', models.DateTimeField(auto_now_add=True)),
                ('inizio', models.DateTimeField(blank=True, null=True)),
                ('arrivo', models.DateTimeField(blank=True, null=True)),
                ('partenza', models.DateTimeField(blank=True, null=True)),
                ('pronto_socc', models.DateTimeField(blank=True, null=True)),
                ('fine', models.DateTimeField(blank=True, null=True)),
                ('sede', models.DateTimeField(blank=True, null=True)),
                ('esito', models.CharField(blank=True, max_length=20, null=True)),
                ('chiusa', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='TestaPiedi',
            fields=[
                ('id_testa_piedi', models.AutoField(primary_key=True, serialize=False)),
                ('front', models.ImageField(blank=True, null=True, upload_to='')),
                ('back', models.ImageField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Scheda',
            fields=[
                ('id_scheda', models.AutoField(primary_key=True, serialize=False)),
                ('scenario', models.CharField(blank=True, max_length=20, null=True)),
                ('cosciente', models.BooleanField(blank=True, null=True)),
                ('respiraBLS', models.BooleanField(blank=True, null=True)),
                ('circoloBLS', models.BooleanField(blank=True, null=True)),
                ('dae', models.BooleanField(blank=True, null=True)),
                ('cicli', models.IntegerField(default=0)),
                ('noteBLS', models.TextField(blank=True, null=True)),
                ('pervieta', models.BooleanField(blank=True, null=True)),
                ('ostruzione', models.BooleanField(blank=True, null=True)),
                ('dispnea', models.BooleanField(blank=True, null=True)),
                ('osservo', models.CharField(blank=True, max_length=20, null=True)),
                ('palpo', models.CharField(blank=True, max_length=20, null=True)),
                ('ascolto', models.BooleanField(blank=True, null=True)),
                ('conto', models.IntegerField(blank=True, null=True)),
                ('saturazione', models.IntegerField(blank=True, null=True)),
                ('saturazione_oss', models.IntegerField(blank=True, null=True)),
                ('ossigeno', models.IntegerField(blank=True, null=True)),
                ('pressione_massima', models.IntegerField(blank=True, null=True)),
                ('pressione_minima', models.IntegerField(blank=True, null=True)),
                ('temperatura', models.IntegerField(blank=True, null=True)),
                ('emorragie', models.CharField(blank=True, max_length=20, null=True)),
                ('polso', models.BooleanField(blank=True, null=True)),
                ('regolare_polso', models.BooleanField(blank=True, null=True)),
                ('cute', models.CharField(blank=True, max_length=20, null=True)),
                ('sudato', models.BooleanField(blank=True, null=True)),
                ('dolore_toracico', models.BooleanField(blank=True, null=True)),
                ('ora_dolore', models.DateTimeField(blank=True, null=True)),
                ('tipo_dolore', models.BooleanField(blank=True, null=True)),
                ('avpu', models.CharField(blank=True, max_length=1, null=True)),
                ('tempo', models.BooleanField(blank=True, null=True)),
                ('spazio', models.BooleanField(blank=True, null=True)),
                ('mimica_c', models.CharField(blank=True, max_length=10, null=True)),
                ('braccia_c', models.CharField(blank=True, max_length=10, null=True)),
                ('linguaggio_c', models.BooleanField(blank=True, null=True)),
                ('forza_sup', models.CharField(blank=True, max_length=10, null=True)),
                ('forza_inf', models.CharField(blank=True, max_length=10, null=True)),
                ('sens_sup', models.CharField(blank=True, max_length=10, null=True)),
                ('sens_inf', models.CharField(blank=True, max_length=10, null=True)),
                ('posizione', models.CharField(blank=True, max_length=20, null=True)),
                ('allergie', models.TextField(blank=True, null=True)),
                ('patologie', models.TextField(blank=True, null=True)),
                ('glicemia', models.IntegerField(blank=True, null=True)),
                ('farmaci', models.TextField(blank=True, null=True)),
                ('pasto', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('testa_piedi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheda.TestaPiedi')),
            ],
        ),
        migrations.CreateModel(
            name='Mezzo',
            fields=[
                ('id_mezzo', models.AutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=10, unique=True)),
                ('tipologia', models.CharField(max_length=10)),
                ('all_day', models.BooleanField(default=False)),
                ('num_mezzo', models.IntegerField()),
                ('equip_min', models.IntegerField()),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Intervento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_mezzo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheda.Mezzo')),
                ('id_missione', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheda.Missione')),
                ('id_scheda', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scheda.Scheda')),
            ],
        ),
    ]
